function tornillostuercas(tornillos[], tuercas[]):
    n = longitud(a)  				// Suponemos que ambos vectores tienen la misma longitud
    para i desde 0 hasta n-1 hacer:		//recorremos el primer vector que contiene tornillos
        para j desde 0 hasta n-1 hacer:		//recorremos el segundo vector que tiene tuercas
            si tornillos[i] == tuercas[j] :	//para cada elemento del vector tornillos comprobar que la tuerca del vector tuercas sea igal
                swap(tuercas[i], tuercas[j])	//si es igual se intecambia la posicion i y j delveector tuercas
                break				//si lo ha encintrado salimos del bucle para evitar que se recorra todo el vector inecesariamente


EFICIENCIA TEORICA: Con un vector de tamaño n, en el peor de los casos supongamos que hay que recorrer el segundo vector entero (n)
			por lo tanto al tener que recorrer ambos vectores n veces, en el peor de los casos se haran n² iteraciones.
			Su orden eficiencia seria O(n²)
			
